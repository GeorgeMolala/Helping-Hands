@model CareVisitListViewModel

@{
    ViewData["Title"] = " | Nurse ";
    Layout = "_Layout_Nurse";

    //aliases to make paging and sorting code shorter;
    RouteDictionary current = Model.CurrentRoute;
    RouteDictionary routes = Model.CurrentRoute.Clone();
}






<h2>Care Visits</h2>
<br />
<br />
<div>
    @if (TempData.Keys.Contains("CreatedStatus"))
    {
        <div>
            <h2>

                @TempData["CreatedStatus"]

            </h2>
        </div>
    }
    <br />
</div>
<div class="row">
    <div class="col-9">
        <form asp-action="Filter" method="post" class="form-inline">

            <div class="row">

                <input class="form-control" data-toggle="tooltip" data-placement="top" title="Email Field, e.g YourName@domain.com" placeholder="Search by Patient Name" />
                <button type="submit" class="btn btn-primary mr-2" asp-controller="CareContract" asp-action="Search">Search</button>
            </div>

            <div class="row">
                <div>
                    <label>Status: </label>
                    <select name="filter" class="form-control m-2"
                            asp-items="@(new SelectList(
                        Model.Status, "Key", "Value", current.VisitStatusFilter))">
                        <option value="@CareVisitGridDTO.DefaultFilter">All</option>
                    </select>
                </div>

                <div>
                    <label>Period: </label>
                    <select name="filter" class="form-control m-2"
                            asp-items="@(new SelectList(
                        Model.Period, "Key", "Value", current.PeriodFilter))">
                        <option value="@CareVisitGridDTO.DefaultFilter">All</option>
                    </select>
                </div>

               

                <button type="submit" class="btn btn-primary ml-2">Filter</button>
            </div>



        </form>
    </div>
</div>





<table class="table table-striped table-hover align-content-center">
    <thead>
        <tr>
            <th>Patient Name</th>
            <th>
                Visit Date
            </th>
            <th>
                Appointment Time
            </th>
            <th>Arrival Time</th>
            <th>Depart Time</th>           
            <th>Status</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var care in Model.CareVisit)
        {
            // int num = medication.MedicationIngredients.Where(s => s.MedicationID == medication.MedicationID).Select(v => v.ActiveIngredientID).FirstOrDefault();

            <tr>
                @foreach(Helping_Hands.CareContracts pat in Model.Contracts)
                {
                    if(care.ContractNumberID == pat.ContractNumberID)
                    {
                        foreach(Patients pati in Model.Patients)
                        {
                            if(pat.PatientUserID == pati.PatientUserID)
                            {
                                <td>@pati.FirstName @pati.Surname</td>
                            }
                        }
                    }
                }

            <td>@Convert.ToDateTime(care.VisitDate).ToString("MM / dd / yyyy") </td>
                <td>@care.ApproxArriva</td>
                <td>@care.ArrivalTime</td>
                 <td>@care.DepartTime</td>                      
                <td>@care.Status</td>

                <td>
                    <a asp-controller="CareVisit" asp-action="VisitDetails"
                       asp-route-id="@care.CareVisitsID">Details</a>

                <td>
            </tr>
        }
    </tbody>
    </tbody>

</table>

@{
    routes = Model.CurrentRoute.Clone(); // Reset to current route values *@
    for (int i = 1; i <= Model.TotalPages; i++)
    {
        routes.PageNumber = i;
        <a asp-action="List" asp-all-route-data="@routes"
           class="btn btn-primary @Nav.Active(i, current.PageNumber)">@i</a>
    }
}
